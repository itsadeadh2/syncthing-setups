AWSTemplateFormatVersion: '2010-09-09'
Description: "AWS CloudFormation Template to deploy Syncthing on Fargate with EFS for persistent storage"

Parameters:
  Revision:
    Type: String
    Description: 'Name of an existing EC2 KeyPair for SSH access'
    Default: '0'
  Memory:
    Type: String
    Description: 'The amount of memory you want your task to have'
    Default: 0.5 GB
  CPU:
    Type: String
    Description: 'The amount of vCPUs you want your task to have'
    Default: .25 vCPU

Resources:

  EFSFileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      PerformanceMode: generalPurpose
      Encrypted: true
      LifecyclePolicies:
        - TransitionToIA: AFTER_30_DAYS

  EFSMountTarget1:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EFSFileSystem
      SubnetId: !ImportValue public-subnet-1-export
      SecurityGroups:
        - !ImportValue securitygroup-export
  
  EFSMountTarget2:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EFSFileSystem
      SubnetId: !ImportValue public-subnet-2-export
      SecurityGroups:
        - !ImportValue securitygroup-export

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: "SyncthingCluster"
      Configuration:
        ExecuteCommandConfiguration:
          Logging: 'DEFAULT'
      CapacityProviders:
        - FARGATE_SPOT
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE_SPOT
          Weight: 1

  SyncthingTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: "SyncthingTask"
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      TaskRoleArn: !GetAtt ECSTaskRole.Arn
      RequiresCompatibilities:
        - FARGATE
      Cpu: !Ref CPU
      Memory: !Ref Memory
      ContainerDefinitions:
        - Name: !Sub "syncthing-${Revision}"
          Image: "linuxserver/syncthing:1.27.6"
          Essential: true
          PortMappings:
            - ContainerPort: 8384
            - ContainerPort: 22000
          MountPoints:
            - ContainerPath: "/config"
              SourceVolume: "SyncthingConfigVolume"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              mode: non-blocking
              max-buffer-size: 25m
              awslogs-group: !Ref TaskLogGroup
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: ecs
      Volumes:
        - Name: "SyncthingConfigVolume"
          EFSVolumeConfiguration:
            FilesystemId: !Ref EFSFileSystem
            TransitEncryption: ENABLED

  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: "SyncthingService1"
      TaskDefinition: !Ref SyncthingTaskDefinition
      DesiredCount: 1
      CapacityProviderStrategy:
        - CapacityProvider: FARGATE_SPOT
          Weight: 1
      EnableExecuteCommand: True
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue public-subnet-1-export
          SecurityGroups:
            - !ImportValue securitygroup-export
          AssignPublicIp: ENABLED
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      LoadBalancers:
        - ContainerName: !Sub "syncthing-${Revision}"
          ContainerPort: 8384  # Match the port for Syncthing
          TargetGroupArn: !ImportValue elb-targetgroup-export

  ECSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Policies:
        - PolicyName: "AmazonECSTaskExecutionRolePolicy"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecs:*
                  - ecr:*
                  - logs:*
                  - ec2:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
              - Effect: Allow
                Action:
                  - efs:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - elb:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - ssm:*
                Resource: "*"

  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action: sts:AssumeRole

  TaskLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/ecs/${AWS::StackName}"
      RetentionInDays: 3
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}"
